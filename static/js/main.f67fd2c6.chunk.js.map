{"version":3,"sources":["utilities.js","Gestures/Victory.js","Gestures/ThumbsUp.js","Gestures/Hi.js","Gestures/Yes.js","Gestures/Callme.js","Gestures/GoodLuck.js","Gestures/Where.js","Gestures/Why.js","Gestures/Iam.js","Gestures/Who.js","App.js","serviceWorker.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","victoryDescription","GestureDescription","addCurl","Finger","Thumb","FingerCurl","HalfCurl","NoCurl","addDirection","FingerDirection","VerticalUp","DiagonalUpLeft","Index","Middle","Ring","FullCurl","HorizontalLeft","Pinky","setWeight","thumbsUpDescription","DiagonalUpRight","HorizontalRight","hiDescription","yesDescription","callmeDescription","DiagonalDownLeft","good_luckDescription","whereDescription","whyDescription","VerticalDown","DiagonalDownRight","iamDescription","whoDescription","VerticallUp","CircularQueue","capacity","this","max","Number","Array","item","isFull","isEmpty","console","log","filter","el","App","webcamRef","useRef","canvasRef","signs","cq","tail","useState","emoji","setEmoji","a","handpose","net","setInterval","detect","runHandpose","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","apply","name","push","getContext","enqueue","print","className","ref","position","marginLeft","marginRight","left","right","textAlign","zindex","bottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f67fd2c6.chunk.js","sourcesContent":["// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n// Infinity Gauntlet Style\r\nconst style = {\r\n  0: { color: \"yellow\", size: 15 },\r\n  1: { color: \"gold\", size: 6 },\r\n  2: { color: \"green\", size: 10 },\r\n  3: { color: \"gold\", size: 6 },\r\n  4: { color: \"gold\", size: 6 },\r\n  5: { color: \"purple\", size: 10 },\r\n  6: { color: \"gold\", size: 6 },\r\n  7: { color: \"gold\", size: 6 },\r\n  8: { color: \"gold\", size: 6 },\r\n  9: { color: \"blue\", size: 10 },\r\n  10: { color: \"gold\", size: 6 },\r\n  11: { color: \"gold\", size: 6 },\r\n  12: { color: \"gold\", size: 6 },\r\n  13: { color: \"red\", size: 10 },\r\n  14: { color: \"gold\", size: 6 },\r\n  15: { color: \"gold\", size: 6 },\r\n  16: { color: \"gold\", size: 6 },\r\n  17: { color: \"orange\", size: 10 },\r\n  18: { color: \"gold\", size: 6 },\r\n  19: { color: \"gold\", size: 6 },\r\n  20: { color: \"gold\", size: 6 },\r\n};\r\n\r\n// Drawing function\r\nexport const drawHand = (predictions, ctx) => {\r\n  // Check if we have predictions\r\n  if (predictions.length > 0) {\r\n    // Loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      // Grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n          // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      // Loop through landmarks and draw em\r\n      for (let i = 0; i < landmarks.length; i++) {\r\n        // Get x point\r\n        const x = landmarks[i][0];\r\n        // Get y point\r\n        const y = landmarks[i][1];\r\n        // Start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n\r\n        // Set line color\r\n        ctx.fillStyle = style[i][\"color\"];\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n};\r\n","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\n\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\n// import GestureDescription from '../GestureDescription';\n\n\n// describe victory gesture ✌️\nconst victoryDescription = new GestureDescription('okey');\n\n\n// thumb:\nvictoryDescription.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\nvictoryDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\nvictoryDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\nvictoryDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\n\n// index:\nvictoryDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\nvictoryDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.75);\nvictoryDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\n\n// middle:\nvictoryDescription.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\nvictoryDescription.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1.0);\nvictoryDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 0.75);\n\n// ring:\nvictoryDescription.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\nvictoryDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.2);\nvictoryDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 1.0);\nvictoryDescription.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.2);\n\n// pinky:\nvictoryDescription.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\nvictoryDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\nvictoryDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 1.0);\nvictoryDescription.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.2);\n\n// give additional weight to index and ring fingers\nvictoryDescription.setWeight(Finger.Index, 2);\nvictoryDescription.setWeight(Finger.Middle, 2);\n\nexport default victoryDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\n\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\n// import GestureDescription from '../GestureDescription';\n\n\n// describe thumbs up gesture 👍\nconst thumbsUpDescription = new GestureDescription('good');\n\n// thumb:\n// - not curled\n// - vertical up (best) or diagonal up left / right\nthumbsUpDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\nthumbsUpDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\nthumbsUpDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.25);\nthumbsUpDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.25);\n\n// all other fingers:\n// - curled\n// - horizontal left or right\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n  thumbsUpDescription.addCurl(finger, FingerCurl.FullCurl, 1.0);\n  thumbsUpDescription.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\n  thumbsUpDescription.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\n}\n\nexport default thumbsUpDescription;\n","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe hi gesture \r\nconst hiDescription = new GestureDescription('hi');\r\n\r\n// thumb:\r\nhiDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nhiDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\nhiDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.75);\r\n//hiDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// index:\r\nhiDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\nhiDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 1.0);\r\nhiDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.60);\r\n//hiDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// middle:\r\nhiDescription.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\r\nhiDescription.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1);\r\nhiDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpRight, 0.5);\r\nhiDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 0.5);\r\n//hiDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpRight , 0.5);\r\n//hiDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft , 0.5);\r\n\r\n// ring:\r\nhiDescription.addCurl(Finger.Ring, FingerCurl.NoCurl, 1.0);\r\nhiDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight, 0.75);\r\nhiDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.5);\r\n//hiDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight , 1.0);\r\n\r\n// pinky:\r\nhiDescription.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0);\r\nhiDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 0.75);\r\nhiDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\r\n//hiDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight , 1.0);\r\n\r\n\r\n\r\nexport default hiDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe victory gesture ✌️\r\nconst yesDescription = new GestureDescription('yes');\r\n\r\n\r\n// thumb:\r\nyesDescription.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\r\nyesDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.4);\r\nyesDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 0.4);\r\nyesDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.4);\r\n\r\n// index:\r\nyesDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 0.5);\r\nyesDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.4);\r\nyesDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.4);\r\n\r\n// middle:\r\nyesDescription.addCurl(Finger.Middle, FingerCurl.NoCurl, 0.5);\r\nyesDescription.addDirection(Finger.Middle, FingerDirection.VerticalUp, 0.4);\r\nyesDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 0.4);\r\n\r\n// ring:\r\nyesDescription.addCurl(Finger.Ring, FingerCurl.FullCurl, 0.5);\r\nyesDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.4);\r\nyesDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 0.4);\r\nyesDescription.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.4);\r\n\r\n// pinky:\r\nyesDescription.addCurl(Finger.Pinky, FingerCurl.FullCurl, 0.5);\r\nyesDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.4);\r\nyesDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 0.4);\r\nyesDescription.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.4);\r\n\r\n// give additional weight to index and ring fingers\r\nyesDescription.setWeight(Finger.Index, 2);\r\nyesDescription.setWeight(Finger.Middle, 2);\r\n\r\nexport default yesDescription;\r\n","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe callme gesture 👍\r\nconst callmeDescription = new GestureDescription('callme');\r\n\r\n// thumb:\r\n// - not curled\r\n// - vertical up (best) or diagonal up left / right\r\ncallmeDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\ncallmeDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\ncallmeDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.25);\r\ncallmeDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.25);\r\n\r\n// index, middle, ring fingers:\r\n// - curled\r\n// - horizontal left or right\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring]) {\r\n  callmeDescription.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n  callmeDescription.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\r\n  callmeDescription.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\r\n}\r\n\r\n// pinky:\r\n// not curled\r\n//- horizontal (best) or diagonal up left diagonal down left\r\ncallmeDescription.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\r\ncallmeDescription.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 1.0);\r\ncallmeDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 0.5);\r\ncallmeDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalDownLeft, 0.5);\r\n\r\n\r\nexport default callmeDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection,  } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe good_luck gesture \r\nconst good_luckDescription = new GestureDescription('good_luck');\r\n\r\n\r\n// thumb:\r\ngood_luckDescription.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\r\ngood_luckDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\r\ngood_luckDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\ngood_luckDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 1.0);\r\n\r\n// index:\r\ngood_luckDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\ngood_luckDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.75);\r\ngood_luckDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 1.0);\r\n\r\n// middle:\r\ngood_luckDescription.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\r\ngood_luckDescription.addDirection(Finger.Middle, FingerDirection.VerticalUp, 0.75);\r\ngood_luckDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// ring:\r\ngood_luckDescription.addCurl(Finger.Ring, FingerCurl.FullCurl, 0.5);\r\ngood_luckDescription.addCurl(Finger.Ring, FingerCurl.NoCurl, 0.5);\r\ngood_luckDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.2);\r\ngood_luckDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 1.0);\r\ngood_luckDescription.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// pinky:\r\ngood_luckDescription.addCurl(Finger.Pinky, FingerCurl.FullCurl, 0.5);\r\ngood_luckDescription.addCurl(Finger.Pinky, FingerCurl.NoCurl, 0.5);\r\ngood_luckDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\r\ngood_luckDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 1.0);\r\ngood_luckDescription.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// give additional weight to index and ring fingers\r\ngood_luckDescription.setWeight(Finger.Index, 2);\r\ngood_luckDescription.setWeight(Finger.Middle, 2);\r\n\r\nexport default good_luckDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe where gesture \r\nconst whereDescription = new GestureDescription('Where');\r\n\r\n\r\n// thumb:\r\nwhereDescription.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\r\nwhereDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\r\nwhereDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 0.2);\r\nwhereDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.2);\r\n\r\n// index:\r\nwhereDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\nwhereDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 1.0);\r\nwhereDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.5);\r\nwhereDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 0.5);\r\n\r\n// middle:\r\nwhereDescription.addCurl(Finger.Middle, FingerCurl.FullCurl, 0.5);\r\nwhereDescription.addDirection(Finger.Middle, FingerDirection.VerticalUp, 0.2);\r\nwhereDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpRight, 0.4);\r\nwhereDescription.addDirection(Finger.Middle, FingerDirection.HorizontalLeft, 0.3);\r\n// ring:\r\nwhereDescription.addCurl(Finger.Ring, FingerCurl.FullCurl, 0.5);\r\nwhereDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.2);\r\nwhereDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight, 0.4);\r\nwhereDescription.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.3);\r\n\r\n// pinky:\r\nwhereDescription.addCurl(Finger.Pinky, FingerCurl.FullCurl, 0.5);\r\nwhereDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\r\nwhereDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 0.4);\r\nwhereDescription.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.3);\r\n\r\n// give additional weight to index finger\r\nwhereDescription.setWeight(Finger.Index, 2);\r\n\r\n\r\nexport default whereDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe why gesture \r\nconst whyDescription = new GestureDescription('Why');\r\n\r\n// thumb:\r\nwhyDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nwhyDescription.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\nwhyDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.75);\r\n//whyDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// index:\r\nwhyDescription.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\nwhyDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 1);\r\nwhyDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 0.5);\r\nwhyDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.5);\r\n\r\n\r\n// middle:\r\nwhyDescription.addCurl(Finger.Middle, FingerCurl.HalfCurl, 1.0);\r\nwhyDescription.addDirection(Finger.Middle, FingerDirection.VerticalDown, 0.7);\r\nwhyDescription.addDirection(Finger.Middle, FingerDirection.DiagonalDownRight, 0.3);\r\n//whyDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpRight , 0.5);\r\n//whyDescription.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft , 0.5);\r\n\r\n// ring:\r\nwhyDescription.addCurl(Finger.Ring, FingerCurl.NoCurl, 1.0);\r\nwhyDescription.addDirection(Finger.Ring, FingerDirection.VerticalUp, 1.0);\r\nwhyDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight, 0.75);\r\n//whyDescription.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight , 1.0);\r\n\r\n// pinky:\r\nwhyDescription.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0);\r\nwhyDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 1.0);\r\nwhyDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 0.75);\r\n//whyDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight , 1.0);\r\n\r\n\r\n\r\nexport default whyDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n\r\n// describe i'm gesture \r\nconst iamDescription = new GestureDescription('I am');\r\n\r\n// all other fingers:\r\n// - curled\r\n// - horizontal left or right\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring]) {\r\n    iamDescription.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n    iamDescription.addDirection(finger, FingerDirection.VerticalDown, 1.0);\r\n    iamDescription.addDirection(finger, FingerDirection.HorizontalLeft, 0.3);\r\n    iamDescription.addDirection(finger, FingerDirection.HorizontalRight, 0.3);\r\n  }\r\n\r\n// pinky:\r\n// - not curled\r\n// - vertical up (best) or diagonal up left / right\r\niamDescription.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0);\r\niamDescription.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 1.0);\r\niamDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 0.25);\r\niamDescription.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 0.25);\r\n\r\n\r\n\r\nexport default iamDescription;","import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// import { Finger, FingerCurl, FingerDirection } from '../FingerDescription';\r\n// import GestureDescription from '../GestureDescription';\r\n\r\n// describe who gesture \r\nconst whoDescription = new GestureDescription('Who');\r\n\r\n// thumb:\r\nwhoDescription.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nwhoDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.5);\r\nwhoDescription.addDirection(Finger.Thumb, FingerDirection.VerticallUp, 0.5);\r\n//hiDescription.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// index:\r\nwhoDescription.addCurl(Finger.Index, FingerCurl.HalfCurl, 1.0);\r\nwhoDescription.addDirection(Finger.Index, FingerDirection.VerticalUp, 1.0);\r\nwhoDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.60);\r\nwhoDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 0.30);\r\n//hiDescription.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// all other fingers:\r\n// - curled\r\n// - horizontal left or right\r\nfor(let finger of [Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n    whoDescription.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n    whoDescription.addDirection(finger, FingerDirection.VerticalDown, 1.0);\r\n    whoDescription.addDirection(finger, FingerDirection.HorizontalLeft, 0.3);\r\n    whoDescription.addDirection(finger, FingerDirection.HorizontalRight, 0.3);\r\n  }\r\n\r\n\r\nexport default whoDescription;","import React, { useRef, useState } from \"react\";\r\n// eslint-disable-next-line\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport './App.css';\r\nimport { drawHand } from \"./utilities.js\";\r\n\r\nimport * as fp from \"fingerpose\";\r\n\r\nimport victoryDescription from './Gestures/Victory';\r\nimport thumbsUpDescription from './Gestures/ThumbsUp';\r\nimport hiDescription from './Gestures/Hi';\r\nimport yesDescription from './Gestures/Yes';\r\nimport callmeDescription from './Gestures/Callme';\r\nimport good_luckDescription from './Gestures/GoodLuck';\r\nimport whereDescription from './Gestures/Where';\r\nimport whyDescription from './Gestures/Why';\r\nimport iamDescription from './Gestures/Iam';\r\nimport whoDescription from './Gestures/Who';\r\n\r\nfunction App() {\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const signs = [];\r\n\r\n  const cq = new CircularQueue(4);\r\n  const tail = cq.tail();\r\n\r\n  const [emoji, setEmoji] = useState(null);\r\n\r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 100);\r\n  };\r\n  runHandpose();\r\n\r\n  const detect = async (net) => {\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ){\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      console.log(hand);\r\n\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n          victoryDescription,\r\n          thumbsUpDescription,\r\n          hiDescription,\r\n          yesDescription,\r\n          callmeDescription,\r\n          good_luckDescription,\r\n          whereDescription,\r\n          whyDescription,\r\n          iamDescription,\r\n          whoDescription,\r\n        ]);\r\n\r\n        const gesture = await GE.estimate(hand[0].landmarks, 8);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n          // console.log(gesture.gestures);\r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n          // console.log(gesture.gestures[maxConfidence].name);\r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n          console.log(emoji);\r\n          signs.push(emoji);\r\n          console.log(signs);\r\n        }\r\n      }\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n    if(tail !== emoji && emoji !== null ){\r\n      cq.enqueue(emoji);\r\n    }\r\n    cq.print();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        {emoji !== null ? (\r\n          <span\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 400,\r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          >{emoji}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CircularQueue {\r\n  #list;\r\n  #capacity;\r\n  #tail = -1;\r\n  #head = -1;\r\n  #size = 0;\r\n\r\n  constructor(capacity) {\r\n    this.#capacity = Math.max(Number(capacity), 0) || 10;\r\n    this.#list = Array(this.#capacity).fill(null);\r\n  }\r\n\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n\r\n  get isFull() {\r\n    return this.size === this.#capacity;\r\n  }\r\n\r\n  get isEmpty() {\r\n    return this.size === 0;\r\n  }\r\n\r\n  enqueue(item) {\r\n    if (!this.isFull) {\r\n      this.#tail = (this.#tail + 1) % this.#capacity;\r\n      this.#list[this.#tail] = item;\r\n      this.#size += 1;\r\n\r\n      if (this.#head === -1) {\r\n        this.#head = this.#tail;\r\n      }\r\n    }\r\n\r\n    return this.size;\r\n  }\r\n\r\n  dequeue() {\r\n    let item = null;\r\n    if (!this.isEmpty) {\r\n      item = this.#list[this.#head];\r\n      this.#list[this.#head] = null;\r\n      this.#head = (this.#head + 1) % this.#capacity;\r\n      this.#size -= 1;\r\n\r\n      if (!this.size) {\r\n        this.#head = -1;\r\n        this.#tail = -1;\r\n      }\r\n    }\r\n    return item;\r\n  }\r\n\r\n  peek() {\r\n    return this.#list[this.#head];\r\n  }\r\n\r\n  print() {\r\n    console.log(this.#list.filter((el) => el !== null));\r\n  }\r\n  tail(){\r\n    return this.#list[this.#tail];\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}